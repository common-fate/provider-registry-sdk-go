openapi: 3.0.0
info:
  title: Common Fate Provider Registry
  version: '1.0'
  contact:
    name: Common Fate
    url: 'https://api.registry.commonfate.io'
  description: The Common Fate Provider Registry API.
servers:
  - url: 'http://localhost:9001'
paths:
  '/v1alpha1/providers/{publisher}/{name}/{version}':
    parameters:
      - schema:
          type: string
        name: publisher
        in: path
        required: true
      - schema:
          type: string
        name: version
        in: path
        required: true
      - schema:
          type: string
        name: name
        in: path
        required: true
    get:
      summary: Get Provider
      operationId: get-provider
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderDetail'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
      tags:
        - Public
  '/v1alpha1/providers/{publisher}/{name}':
    parameters:
      - schema:
          type: string
        name: publisher
        in: path
        required: true
      - schema:
          type: string
        name: name
        in: path
        required: true
    get:
      summary: List Provider Versions
      operationId: list-provider-versions
      responses:
        '200':
          $ref: '#/components/responses/ListProvidersResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
      tags:
        - Public
      description: 'pass in a generic published/name combination and get the full list of providers '
  '/v1alpha1/providers/{publisher}/{name}/{version}/readme':
    parameters:
      - schema:
          type: string
        name: publisher
        in: path
        required: true
      - schema:
          type: string
        name: version
        in: path
        required: true
      - schema:
          type: string
        name: name
        in: path
        required: true
    get:
      summary: Get Provider Readme
      operationId: get-provider-readme
      responses:
        '200':
          $ref: '#/components/responses/ProviderReadmeResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
      tags:
        - Public
      description: Returns the readme for this provider
  /v1alpha1/providers:
    get:
      summary: List Providers
      tags:
        - Public
      responses:
        '200':
          $ref: '#/components/responses/ListProvidersResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
      operationId: list-all-providers
      parameters:
        - schema:
            type: boolean
          in: query
          name: withDev
          description: withDev flag will return all providers including dev providers
  /v1alpha1/health:
    get:
      summary: Healthcheck
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/HealthResponse'
      operationId: healthcheck
      description: Returns a HTTP 200 OK response if the registry service is healthy.
  /v1alpha1/publish:
    parameters: []
    post:
      summary: Publish a Provider
      operationId: user-publish-provider
      responses:
        '200':
          $ref: '#/components/responses/PublishProviderResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
      description: |-
        Publish a new Provider, you may call this API multiple times for the same provider version until you have marked the publishing as complete.

        Once a file has been successfully uploaded, it cannot be overwritten.
        You will need to publish with a new version number.
      tags:
        - Team
      requestBody:
        $ref: '#/components/requestBodies/PublishProviderRequest'
  /v1alpha1/publish/complete:
    parameters: []
    post:
      summary: Complete Publishing a Provider
      operationId: user-complete-publish-provider
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderDetail'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
      description: Complete publishing a new provider should be called when uploading is complete.
      tags:
        - Team
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Provider'
  /v1alpha1/publishers:
    post:
      summary: Create Publisher
      operationId: user-create-publisher
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publisher'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
      description: ''
      requestBody:
        $ref: '#/components/requestBodies/CreatePublisherRequest'
  /v1alpha1/me:
    get:
      summary: Get Me
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
      operationId: user-get-me
      description: describes the current user
components:
  schemas:
    ProviderDetail:
      title: ProviderDetail
      x-stoplight:
        id: ad9be36dbe096
      type: object
      description: A registered provider version
      properties:
        publisher:
          type: string
        name:
          type: string
        version:
          type: string
        lambdaAssetS3Arn:
          type: string
        cfnTemplateS3Arn:
          type: string
        schema:
          $ref: '#/components/schemas/Schema'
        createdAt:
          type: string
        updatedAt:
          type: string
        meta:
          $ref: '#/components/schemas/ProviderMetaInfo'
      required:
        - publisher
        - name
        - version
        - lambdaAssetS3Arn
        - cfnTemplateS3Arn
        - schema
        - createdAt
        - updatedAt
    Provider:
      title: Provider
      type: object
      description: A registered provider version
      x-stoplight:
        id: b4d9111a1ff26
      properties:
        publisher:
          type: string
          pattern: '^[a-z0-9-]+$'
        name:
          type: string
          pattern: '^[a-z0-9-]+$'
        version:
          type: string
          pattern: '^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-[\da-z\-]+(?:\.[\da-z\-]+)*)?(?:\+[\da-z\-]+(?:\.[\da-z\-]+)*)?$'
      required:
        - publisher
        - name
        - version
    DiagnosticLog:
      title: DiagnosticLog
      x-stoplight:
        id: xq5uhsxpiml1y
      type: object
      properties:
        level:
          $ref: '#/components/schemas/LogLevel'
        msg:
          type: string
      required:
        - level
        - msg
    DescribeResponse:
      title: DescribeResponse
      x-stoplight:
        id: atffan2bx099r
      type: object
      properties:
        provider:
          $ref: '#/components/schemas/Provider'
        config:
          type: object
        healthy:
          type: boolean
        diagnostics:
          type: array
          items:
            $ref: '#/components/schemas/DiagnosticLog'
        schema:
          $ref: '#/components/schemas/Schema'
      required:
        - provider
        - config
        - healthy
        - diagnostics
        - schema
    LogLevel:
      title: LogLevel
      x-stoplight:
        id: r9cextojd3t67
      type: string
      enum:
        - INFO
        - ERROR
        - WARNING
    Config:
      properties:
        description:
          description: The usage for the config variable.
          title: Description
          type: string
        secret:
          default: false
          title: Secret
          type: boolean
        type:
          enum:
            - string
          title: Type
          type: string
      required:
        - type
      title: Config
      type: object
    Loader:
      description: |-
        A callable function in the provider which can
        load resources.

        Additional fields for loader configuration may be added
        in a future specification.
      properties:
        title:
          title: Title
          type: string
      required:
        - title
      title: Loader
      type: object
    Meta:
      properties:
        framework:
          description: The Provider Developer Kit framework version which published the schema.
          title: Framework
          type: string
      title: Meta
      type: object
    Providers:
      properties:
        name:
          title: Name
          type: string
        publisher:
          title: Publisher
          type: string
        version:
          title: Version
          type: string
      required:
        - publisher
        - name
        - version
      title: Provider
      type: object
    Resources:
      properties:
        loaders:
          additionalProperties:
            $ref: '#/components/schemas/Loader'
          x-go-type: 'map[string]Loader'
          title: Loaders
          type: object
        types:
          description: the types of resources
          title: Types
          type: object
      required:
        - loaders
        - types
      title: Resources
      type: object
      description: ''
    Target:
      properties:
        properties:
          additionalProperties:
            $ref: '#/components/schemas/TargetField'
          x-go-type: 'map[string]TargetField'
          description: the actual properties of the target.
          title: Properties
          type: object
        type:
          description: included for compatibility with JSON Schema - all targets are currently objects.
          enum:
            - object
          title: Type
          type: string
      required:
        - type
        - properties
      title: Target
      type: object
    TargetField:
      properties:
        description:
          title: Description
          type: string
        resource:
          description: 'If specified, the type of the resource the field should be populated from.'
          title: Resource
          type: string
        title:
          title: Title
          type: string
        type:
          enum:
            - string
          title: Type
          type: string
      required:
        - type
      title: TargetField
      type: object
    Schema:
      description: The schema for a Common Fate Provider.
      properties:
        $id:
          type: string
        $schema:
          type: string
        config:
          additionalProperties:
            $ref: '#/components/schemas/Config'
          x-go-type: 'map[string]Config'
          title: Config
          type: object
        meta:
          $ref: '#/components/schemas/Meta'
        provider:
          $ref: '#/components/schemas/Provider'
        resources:
          $ref: '#/components/schemas/Resources'
        targets:
          additionalProperties:
            $ref: '#/components/schemas/Target'
          x-go-type: 'map[string]Target'
          title: Targets
          type: object
      required:
        - meta
        - $id
        - $schema
      title: Schema
      type: object
    ProviderMetaInfo:
      type: object
      properties:
        icon:
          type: string
        source:
          type: string
        displayName:
          type: string
      title: ProviderMetaInfo
      description: 'Metadata from provider.toml file for a Provider '
      x-stoplight:
        id: 1bb8b6403eed2
    Publisher:
      title: Publisher
      x-stoplight:
        id: h3ifqy9uln5u5
      type: object
      description: Publisher
      properties:
        id:
          type: string
          pattern: '^[a-z0-9-]+$'
      required:
        - id
    User:
      title: User
      x-stoplight:
        id: twwtshp9im1fp
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        publishers:
          type: array
          items:
            type: string
      required:
        - id
        - email
        - publishers
  requestBodies:
    PublishProviderRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              publisher:
                type: string
                pattern: '^[a-z0-9-]+$'
              name:
                type: string
                pattern: '^[a-z0-9-]+$'
              version:
                type: string
                pattern: '^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-[\da-z\-]+(?:\.[\da-z\-]+)*)?(?:\+[\da-z\-]+(?:\.[\da-z\-]+)*)?$'
                description: Version must follow server format
              roleFiles:
                type: array
                description: an array of filenames for role templates to be uploaded
                items:
                  type: string
              schema:
                $ref: '#/components/schemas/Schema'
              meta:
                $ref: '#/components/schemas/ProviderMetaInfo'
              dev:
                type: boolean
            required:
              - publisher
              - name
              - version
              - roleFiles
              - schema
              - meta
    CreatePublisherRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
                pattern: '^[a-z0-9-]+$'
            required:
              - id
  responses:
    HealthResponse:
      description: Healthcheck response body.
      content:
        application/json:
          schema:
            type: object
            properties:
              healthy:
                type: boolean
            required:
              - healthy
          examples: {}
    ErrorResponse:
      description: An error returned from the API.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
            required:
              - error
          examples: {}
    ListProvidersResponse:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              providers:
                type: array
                items:
                  $ref: '#/components/schemas/ProviderDetail'
              next:
                type: string
                nullable: true
            required:
              - providers
              - next
    PublishProviderResponse:
      description: 'Response contai9ns presigned URLs for uploading provider assets. Once assets have been uploaded, complete publishing provider should be called.'
      content:
        application/json:
          schema:
            type: object
            properties:
              lambdaHandlerUploadUrl:
                type: string
              cloudformationTemplateUploadUrl:
                type: string
              readmeUploadUrl:
                type: string
              roleTemplateUploadURLs:
                description: filename is the key and value is the upload URL
                type: object
                x-go-type: 'map[string]string'
            required:
              - lambdaHandlerUploadUrl
              - cloudformationTemplateUploadUrl
              - readmeUploadUrl
              - roleTemplateUploadURLs
    ProviderReadmeResponse:
      description: Provider Readme
      content:
        application/json:
          schema:
            type: object
            properties:
              readme:
                type: string
            required:
              - readme
tags:
  - name: Public
  - name: Team
